git:
  paging:
    colorArg: always
    pager: delta --dark --paging=never
  log:
    order: "topo-order"
    showGraph: "always"
  branchLogCmd: "git log --graph --pretty=custom"
  allBranchesLogCmd: "git log --graph --pretty=custom"
  mainBranches: [master, main, develop]
  promptToReturnFromSubprocess: false
  # commitPrefixes:
gui:
  nerdFontsVersion: "3"
  sidePanelWidth: 0.2
  showBottomLine: true
  border: "rounded"
  # branchColors:
  #   "release": "#838ba7" # for branches beginning with 'release/'
  authorColors:
    "*": "#7dc4e4" # sapphire
  # use the catpucchin macchiato theme
  theme:
    lightTheme: false
    activeBorderColor:
      - "#eed49f" # yellow
      - bold
    inactiveBorderColor:
      - "#8087a2" # Overlay1
    optionsTextColor:
      - "#8aadf4" # Blue
    selectedLineBgColor:
      - "#363a4f" # Surface0
    selectedRangeBgColor:
      - "#363a4f" # Surface0
    cherryPickedCommitBgColor:
      - "#8bd5ca" # Teal
    cherryPickedCommitFgColor:
      - "#8aadf4" # Blue
    unstagedChangesColor:
      - "#ed8796" # Red
os:
  editPreset: "nvim"
customCommands:
  - key: "<c-v>"
    context: "global"
    description: "Create new conventional commit"
    prompts:
      - type: "menu"
        key: "Type"
        title: "Type of change"
        options:
          - name: "feat"
            description: "A new feature"
            value: "feat"
          - name: "fix"
            description: "A bug fix"
            value: "fix"
          - name: "build"
            description: "Changes that affect the build system or external dependencies"
            value: "build"
          - name: "chore"
            description: "Other changes that don't modify src or test files"
            value: "chore"
          - name: "ci"
            description: "Changes to CI configuration files and scripts"
            value: "ci"
          - name: "docs"
            description: "Documentation only changes"
            value: "docs"
          - name: "perf"
            description: "A code change that improves performance"
            value: "perf"
          - name: "refactor"
            description: "A code change that neither fixes a bug nor adds a feature"
            value: "refactor"
          - name: "revert"
            description: "Reverts a previous commit"
            value: "revert"
          - name: "style"
            description: "Changes that do not affect the meaning of the code"
            value: "style"
          - name: "test"
            description: "Adding missing tests or correcting existing tests"
            value: "test"
      - type: "input"
        title: "message"
        key: "Message"
        initialValue: ""
    command: "git commit --message '{{.Form.Type}}: {{.Form.Message}}'"
    loadingText: "Creating conventional commit..."
